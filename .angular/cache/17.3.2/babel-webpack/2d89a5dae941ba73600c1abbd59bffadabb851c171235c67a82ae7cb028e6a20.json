{"ast":null,"code":"import { Role } from '../../_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../_services/item.service\";\nimport * as i2 from \"../../_services/account.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = (a0, a1) => [a0, a1];\nconst _c1 = a0 => [\"/add/item/edit\", a0];\nfunction ItemListComponent_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵtext(1, \"Add Item\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ItemListComponent_tr_18_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 6);\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ItemListComponent_tr_18_td_9_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const item_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteItem(item_r2.id));\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c1, item_r2.id));\n  }\n}\nfunction ItemListComponent_tr_18_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"span\", 8);\n    i0.ɵɵtext(2, \"View Only\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ItemListComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ItemListComponent_tr_18_td_9_Template, 5, 3, \"td\", 5)(10, ItemListComponent_tr_18_td_10_Template, 3, 0, \"td\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.categoryName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.brandName);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasRole(i0.ɵɵpureFunction2(6, _c0, ctx_r2.Role.SuperAdmin, ctx_r2.Role.Admin)));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.hasRole(i0.ɵɵpureFunction2(9, _c0, ctx_r2.Role.SuperAdmin, ctx_r2.Role.Admin)));\n  }\n}\nexport let ItemListComponent = /*#__PURE__*/(() => {\n  class ItemListComponent {\n    constructor(itemService, accountService, router) {\n      this.itemService = itemService;\n      this.accountService = accountService;\n      this.router = router;\n      this.Role = Role;\n      this.items = [];\n    }\n    ngOnInit() {\n      this.loadItems();\n    }\n    // Load items with category and brand (backend already provides joins)\n    loadItems() {\n      this.itemService.getAll().subscribe({\n        next: items => {\n          this.items = items.map(item => ({\n            ...item,\n            categoryName: item.category ? item.category.name : 'Uncategorized',\n            brandName: item.brand ? item.brand.name : 'No Brand'\n          }));\n        },\n        error: error => {\n          console.error('Error fetching items:', error);\n        }\n      });\n    }\n    // Delete item\n    deleteItem(id) {\n      if (confirm('Are you sure you want to delete this item?')) {\n        this.itemService.delete(id).subscribe(() => this.loadItems());\n      }\n    }\n    hasRole(roles) {\n      const account = this.accountService.accountValue;\n      if (!account) return false;\n      return roles.some(role => role === account.role);\n    }\n    static #_ = this.ɵfac = function ItemListComponent_Factory(t) {\n      return new (t || ItemListComponent)(i0.ɵɵdirectiveInject(i1.ItemService), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ItemListComponent,\n      selectors: [[\"app-item-list\"]],\n      decls: 19,\n      vars: 5,\n      consts: [[1, \"container\", \"mt-3\"], [\"routerLink\", \"/add/item/add\", \"class\", \"btn btn-primary mb-3\", 4, \"ngIf\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/add/item/add\", 1, \"btn\", \"btn-primary\", \"mb-3\"], [4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-warning\", 3, \"routerLink\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"text-muted\"]],\n      template: function ItemListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2, \"Items\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, ItemListComponent_a_3_Template, 2, 0, \"a\", 1);\n          i0.ɵɵelementStart(4, \"table\", 2)(5, \"thead\")(6, \"tr\")(7, \"th\");\n          i0.ɵɵtext(8, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Brand\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"th\");\n          i0.ɵɵtext(16, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"tbody\");\n          i0.ɵɵtemplate(18, ItemListComponent_tr_18_Template, 11, 12, \"tr\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.hasRole(i0.ɵɵpureFunction2(2, _c0, ctx.Role.SuperAdmin, ctx.Role.Admin)));\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return ItemListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}