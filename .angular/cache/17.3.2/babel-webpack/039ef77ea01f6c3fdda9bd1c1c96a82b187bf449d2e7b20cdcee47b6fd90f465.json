{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../_services/item.service\";\nimport * as i2 from \"../../_services/category.service\";\nimport * as i3 from \"@angular/router\";\nfunction ItemEditComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(c_r2.name);\n  }\n}\nexport let ItemEditComponent = /*#__PURE__*/(() => {\n  class ItemEditComponent {\n    constructor(itemService, categoryService, route, router) {\n      this.itemService = itemService;\n      this.categoryService = categoryService;\n      this.route = route;\n      this.router = router;\n      this.item = {\n        name: '',\n        categoryId: null\n      };\n      this.categories = [];\n      this.isEdit = false;\n    }\n    ngOnInit() {\n      this.id = +this.route.snapshot.params['id'];\n      this.isEdit = !!this.id;\n      // Load categories for dropdown\n      this.categoryService.getAll().subscribe(data => this.categories = data);\n      if (this.isEdit) {\n        this.itemService.getById(this.id).subscribe(data => this.item = data);\n      }\n    }\n    onSubmit() {\n      if (this.isEdit) {\n        this.itemService.update(this.id, this.item).subscribe(() => {\n          this.router.navigate(['/add/item']);\n        });\n      } else {\n        this.itemService.create(this.item).subscribe(() => {\n          this.router.navigate(['/add/item']);\n        });\n      }\n    }\n    static #_ = this.ɵfac = function ItemEditComponent_Factory(t) {\n      return new (t || ItemEditComponent)(i0.ɵɵdirectiveInject(i1.ItemService), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ItemEditComponent,\n      selectors: [[\"app-item-edit\"]],\n      decls: 18,\n      vars: 5,\n      consts: [[\"form\", \"ngForm\"], [1, \"container\", \"mt-3\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"categoryId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"routerLink\", \"/add/item\", 1, \"btn\", \"btn-secondary\", \"ms-2\"], [3, \"value\"]],\n      template: function ItemEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ItemEditComponent_Template_form_ngSubmit_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n          i0.ɵɵtext(7, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ItemEditComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.item.name, $event) || (ctx.item.name = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 4);\n          i0.ɵɵtext(11, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"select\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ItemEditComponent_Template_select_ngModelChange_12_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.item.categoryId, $event) || (ctx.item.categoryId = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵtemplate(13, ItemEditComponent_option_13_Template, 2, 2, \"option\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"button\", 8);\n          i0.ɵɵtext(15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"a\", 9);\n          i0.ɵɵtext(17, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEdit ? \"Edit Item\" : \"Add Item\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.item.name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.item.categoryId);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEdit ? \"Update\" : \"Save\");\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ItemEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}