{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services/brand.service\";\nimport * as i4 from \"@angular/common\";\nfunction BrandEditComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let BrandEditComponent = /*#__PURE__*/(() => {\n  class BrandEditComponent {\n    constructor(formBuilder, route, router, brandService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.brandService = brandService;\n      this.title = 'Add Brand';\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['']\n      });\n      if (this.id) {\n        this.title = 'Edit Brand';\n        this.brandService.getById(this.id).subscribe(x => this.form.patchValue(x));\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.id) {\n        this.brandService.update(this.id, this.form.value).subscribe({\n          next: () => this.router.navigate(['/add/brand']),\n          error: error => {\n            this.loading = false;\n            console.error(error);\n          }\n        });\n      } else {\n        this.brandService.create(this.form.value).subscribe({\n          next: () => this.router.navigate(['/add/brand']),\n          error: error => {\n            this.loading = false;\n            console.error(error);\n          }\n        });\n      }\n    }\n    // Go back to brand list\n    goBack() {\n      this.router.navigate(['/add/brand']);\n    }\n    static #_ = this.ɵfac = function BrandEditComponent_Factory(t) {\n      return new (t || BrandEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.BrandService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BrandEditComponent,\n      selectors: [[\"app-brand-edit\"]],\n      decls: 17,\n      vars: 4,\n      consts: [[1, \"container\", \"mt-3\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"description\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ms-2\", 3, \"click\"], [1, \"text-danger\"]],\n      template: function BrandEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function BrandEditComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 3);\n          i0.ɵɵtemplate(8, BrandEditComponent_div_8_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n          i0.ɵɵtext(11, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"textarea\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 6);\n          i0.ɵɵtext(14, \"Save\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function BrandEditComponent_Template_button_click_15_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵtext(16, \"Back\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n  return BrandEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}