{"ast":null,"code":"import { Role } from '../_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/stock.service\";\nimport * as i2 from \"../_services/item.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../_services/account.service\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = (a0, a1) => [a0, a1];\nfunction StockListComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 7);\n    i0.ɵɵtext(1, \"Add Stock\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StockListComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function StockListComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openDisposeModal());\n    });\n    i0.ɵɵtext(1, \"Dispose Items\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StockListComponent_tr_45_button_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function StockListComponent_tr_45_button_30_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const stock_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.editStock(stock_r4.id));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StockListComponent_tr_45_button_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function StockListComponent_tr_45_button_31_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const stock_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deleteStock(stock_r4.id));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StockListComponent_tr_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\")(20, \"span\", 9);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"td\")(28, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function StockListComponent_tr_45_Template_button_click_28_listener() {\n      const stock_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.viewStock(stock_r4.id));\n    });\n    i0.ɵɵtext(29, \"View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(30, StockListComponent_tr_45_button_30_Template, 2, 0, \"button\", 11)(31, StockListComponent_tr_45_button_31_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const stock_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getItemName(stock_r4.itemId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getCategoryName(stock_r4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getBrandName(stock_r4));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r4.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(11, 17, stock_r4.price, \"PHP\", \"symbol\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(14, 21, stock_r4.price * stock_r4.quantity, \"PHP\", \"symbol\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(stock_r4.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((stock_r4.location == null ? null : stock_r4.location.name) || \"No Location\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"badge-success\", ctx_r1.calculateAvailableStockForItem(stock_r4.itemId) > 0)(\"badge-warning\", ctx_r1.calculateAvailableStockForItem(stock_r4.itemId) === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.calculateAvailableStockForItem(stock_r4.itemId), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r4.remarks);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(26, 25, stock_r4.createdAt, \"short\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasRole(i0.ɵɵpureFunction2(28, _c0, ctx_r1.Role.SuperAdmin, ctx_r1.Role.Admin)));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasRole(i0.ɵɵpureFunction2(31, _c0, ctx_r1.Role.SuperAdmin, ctx_r1.Role.Admin)));\n  }\n}\nexport let StockListComponent = /*#__PURE__*/(() => {\n  class StockListComponent {\n    constructor(stockService, itemService, router, accountService) {\n      this.stockService = stockService;\n      this.itemService = itemService;\n      this.router = router;\n      this.accountService = accountService;\n      this.Role = Role;\n      this.stocks = [];\n      this.itemsMap = {};\n      this.totalItems = 0;\n      this.totalInventoryPrice = 0;\n      this.availableStockMap = {};\n      // Make Object.keys available in template\n      this.Object = Object;\n      // Modal and selection properties\n      this.showDisposeModal = false;\n      this.selectedStocks = [];\n      this.selectedDisposeItems = [];\n      this.itemsWithStock = [];\n      this.locations = [];\n      this.disposeForm = {\n        locationId: '',\n        price: 0,\n        remarks: ''\n      };\n    }\n    ngOnInit() {\n      // Load items first to map itemId → item name\n      this.itemService.getAll().subscribe(items => {\n        this.itemsMap = items.reduce((map, item) => {\n          map[item.id] = item.name;\n          return map;\n        }, {});\n        this.loadStocks();\n        this.loadAvailableStock();\n      });\n    }\n    loadStocks() {\n      this.stockService.getAll().subscribe({\n        next: stocks => {\n          this.stocks = stocks;\n          this.calculateTotals();\n          this.loadAvailableStock(); // Reload available stock after stocks are loaded\n        },\n        error: error => {\n          console.error('Error fetching stocks:', error);\n        }\n      });\n    }\n    getItemName(itemId) {\n      return this.itemsMap[itemId] || 'Unknown';\n    }\n    getLocationName(stock) {\n      return stock.location ? stock.location.name : 'No Location';\n    }\n    calculateTotals() {\n      // Sum total items and inventory value\n      this.totalItems = this.stocks.reduce((sum, s) => sum + (s.quantity || 0), 0);\n      this.totalInventoryPrice = this.stocks.reduce((sum, s) => sum + (s.price || 0) * (s.quantity || 0), 0);\n    }\n    getCategoryName(stock) {\n      return stock.item?.category?.name || 'No Category';\n    }\n    getBrandName(stock) {\n      return stock.item?.brand?.name || 'No Brand';\n    }\n    viewStock(id) {\n      this.router.navigate(['/stocks/view', id]);\n    }\n    editStock(id) {\n      this.router.navigate(['/stocks/edit', id]);\n    }\n    deleteStock(id) {\n      if (confirm('Are you sure you want to delete this stock record?')) {\n        this.stockService.delete(id).subscribe(() => this.loadStocks());\n      }\n    }\n    loadAvailableStock() {\n      // Get unique item IDs from stocks\n      const itemIds = [...new Set(this.stocks.map(stock => stock.itemId))];\n      // Load available stock for each item\n      itemIds.forEach(itemId => {\n        this.stockService.getAvailableStock(itemId).subscribe({\n          next: data => {\n            this.availableStockMap[itemId] = data.availableStock;\n          },\n          error: error => {\n            console.error('Error loading available stock for item', itemId, error);\n          }\n        });\n      });\n    }\n    // Calculate available stock for a specific item based on all its stock operations\n    calculateAvailableStockForItem(itemId) {\n      const itemStocks = this.stocks.filter(stock => stock.itemId === itemId);\n      let availableStock = 0;\n      itemStocks.forEach(stock => {\n        if (stock.type === 'ADD') {\n          availableStock += stock.quantity;\n        } else if (stock.type === 'DISPOSE') {\n          availableStock -= stock.quantity;\n        }\n      });\n      return availableStock;\n    }\n    getAvailableStock(itemId) {\n      return this.availableStockMap[itemId] || 0;\n    }\n    getItemsWithAvailableStock() {\n      const uniqueItemIds = [...new Set(this.stocks.map(stock => stock.itemId))];\n      return uniqueItemIds.filter(itemId => this.calculateAvailableStockForItem(itemId) > 0).length;\n    }\n    hasRole(roles) {\n      const account = this.accountService.accountValue;\n      if (!account) return false;\n      return roles.some(role => role === account.role);\n    }\n    // Modal methods\n    openDisposeModal() {\n      this.showDisposeModal = true;\n      this.loadItemsWithStock();\n      this.loadLocations();\n    }\n    closeDisposeModal() {\n      this.showDisposeModal = false;\n      this.selectedStocks = [];\n      this.selectedDisposeItems = [];\n      this.disposeForm = {\n        locationId: '',\n        price: 0,\n        remarks: ''\n      };\n    }\n    loadItemsWithStock() {\n      // Get unique items that have available stock\n      const uniqueItems = new Map();\n      this.stocks.forEach(stock => {\n        const availableStock = this.calculateAvailableStockForItem(stock.itemId);\n        if (availableStock > 0) {\n          const itemKey = `${stock.itemId}-${stock.item?.name}`;\n          if (!uniqueItems.has(itemKey)) {\n            uniqueItems.set(itemKey, {\n              id: stock.itemId,\n              name: stock.item?.name || 'Unknown Item',\n              category: stock.item?.category?.name || 'No Category',\n              brand: stock.item?.brand?.name || 'No Brand',\n              availableStock: availableStock\n            });\n          }\n        }\n      });\n      this.itemsWithStock = Array.from(uniqueItems.values());\n    }\n    loadLocations() {\n      // You'll need to import StorageLocationService\n      // For now, let's create a simple locations array\n      this.locations = [{\n        id: 1,\n        name: 'Storage Room A'\n      }, {\n        id: 2,\n        name: 'Storage Room B'\n      }, {\n        id: 3,\n        name: 'Warehouse'\n      }];\n    }\n    toggleStockSelection(stock) {\n      const index = this.selectedStocks.findIndex(s => s.id === stock.id);\n      if (index > -1) {\n        this.selectedStocks.splice(index, 1);\n      } else {\n        this.selectedStocks.push(stock);\n      }\n    }\n    toggleDisposeItemSelection(item) {\n      const index = this.selectedDisposeItems.findIndex(i => i.id === item.id);\n      if (index > -1) {\n        this.selectedDisposeItems.splice(index, 1);\n      } else {\n        this.selectedDisposeItems.push(item);\n      }\n    }\n    isStockSelected(stock) {\n      return this.selectedStocks.some(s => s.id === stock.id);\n    }\n    isDisposeItemSelected(item) {\n      return this.selectedDisposeItems.some(i => i.id === item.id);\n    }\n    disposeSelectedItems() {\n      if (this.selectedDisposeItems.length === 0) {\n        alert('Please select items to dispose');\n        return;\n      }\n      if (!this.disposeForm.locationId) {\n        alert('Please select a location');\n        return;\n      }\n      if (!confirm(`Are you sure you want to dispose the selected items?`)) {\n        return;\n      }\n      // Create dispose entries for each selected item\n      const disposePromises = this.selectedDisposeItems.map(item => {\n        const disposeData = {\n          itemId: item.id,\n          quantity: item.availableStock,\n          type: 'DISPOSE',\n          locationId: this.disposeForm.locationId,\n          price: this.disposeForm.price,\n          remarks: this.disposeForm.remarks\n        };\n        return this.stockService.create(disposeData).toPromise();\n      });\n      Promise.all(disposePromises).then(() => {\n        alert('Items disposed successfully');\n        this.closeDisposeModal();\n        this.loadStocks();\n      }).catch(error => {\n        console.error('Error disposing items:', error);\n        alert('Error disposing items');\n      });\n    }\n    static #_ = this.ɵfac = function StockListComponent_Factory(t) {\n      return new (t || StockListComponent)(i0.ɵɵdirectiveInject(i1.StockService), i0.ɵɵdirectiveInject(i2.ItemService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AccountService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StockListComponent,\n      selectors: [[\"app-stock-list\"]],\n      decls: 46,\n      vars: 16,\n      consts: [[1, \"container\", \"mt-3\"], [1, \"mb-3\"], [\"routerLink\", \"/stocks/add\", \"class\", \"btn btn-primary me-2\", 4, \"ngIf\"], [\"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"alert\", \"alert-info\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/stocks/add\", 1, \"btn\", \"btn-primary\", \"me-2\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"badge\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"mr-2\", 3, \"click\"], [\"class\", \"btn btn-sm btn-warning mr-2\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-sm btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-warning\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n      template: function StockListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2, \"Stock Logs\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1);\n          i0.ɵɵtemplate(4, StockListComponent_a_4_Template, 2, 0, \"a\", 2)(5, StockListComponent_button_5_Template, 2, 0, \"button\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"strong\");\n          i0.ɵɵtext(8, \"Total Items:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(9);\n          i0.ɵɵelementStart(10, \"strong\");\n          i0.ɵɵtext(11, \"Total Inventory Price:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12);\n          i0.ɵɵpipe(13, \"currency\");\n          i0.ɵɵelementStart(14, \"strong\");\n          i0.ɵɵtext(15, \"Items with Available Stock:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"table\", 5)(18, \"thead\")(19, \"tr\")(20, \"th\");\n          i0.ɵɵtext(21, \"Item Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"th\");\n          i0.ɵɵtext(23, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"th\");\n          i0.ɵɵtext(25, \"Brand\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"th\");\n          i0.ɵɵtext(27, \"Quantity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"th\");\n          i0.ɵɵtext(29, \"Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"th\");\n          i0.ɵɵtext(31, \"Total Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"th\");\n          i0.ɵɵtext(33, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"th\");\n          i0.ɵɵtext(35, \"Location\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"th\");\n          i0.ɵɵtext(37, \"Available Stock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"th\");\n          i0.ɵɵtext(39, \"Remarks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"th\");\n          i0.ɵɵtext(41, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"th\");\n          i0.ɵɵtext(43, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(44, \"tbody\");\n          i0.ɵɵtemplate(45, StockListComponent_tr_45_Template, 32, 34, \"tr\", 6);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.hasRole(i0.ɵɵpureFunction2(10, _c0, ctx.Role.SuperAdmin, ctx.Role.Admin)));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.hasRole(i0.ɵɵpureFunction2(13, _c0, ctx.Role.SuperAdmin, ctx.Role.Admin)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.totalItems, \" | \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(13, 6, ctx.totalInventoryPrice, \"PHP\", \"symbol\"), \" | \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.getItemsWithAvailableStock(), \" \");\n          i0.ɵɵadvance(29);\n          i0.ɵɵproperty(\"ngForOf\", ctx.stocks);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i3.RouterLink, i5.CurrencyPipe, i5.DatePipe],\n      encapsulation: 2\n    });\n  }\n  return StockListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}