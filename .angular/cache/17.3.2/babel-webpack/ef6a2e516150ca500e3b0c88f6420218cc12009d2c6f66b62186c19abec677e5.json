{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services/item.service\";\nimport * as i4 from \"../../_services/category.service\";\nimport * as i5 from \"../../_services/brand.service\";\nfunction ItemEditComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(cat_r1.name);\n  }\n}\nfunction ItemEditComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const brand_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", brand_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(brand_r2.name);\n  }\n}\nexport let ItemEditComponent = /*#__PURE__*/(() => {\n  class ItemEditComponent {\n    constructor(fb, route, router, itemService, categoryService, brandService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.itemService = itemService;\n      this.categoryService = categoryService;\n      this.brandService = brandService;\n      this.categories = [];\n      this.brands = [];\n      this.title = 'Add Item';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      // Initialize form\n      this.form = this.fb.group({\n        name: ['', Validators.required],\n        categoryId: ['', Validators.required],\n        brandId: ['', Validators.required],\n        // NEW\n        description: ['']\n      });\n      // Load categories and brands\n      this.loadCategories();\n      this.loadBrands();\n      // If editing, load existing item\n      if (this.id) {\n        this.title = 'Edit Item';\n        this.itemService.getById(this.id).subscribe(item => {\n          this.form.patchValue(item);\n        });\n      }\n    }\n    loadCategories() {\n      this.categoryService.getAll().subscribe(data => this.categories = data);\n    }\n    loadBrands() {\n      this.brandService.getAll().subscribe(data => this.brands = data);\n    }\n    save() {\n      if (this.form.invalid) return;\n      const saveOperation = this.id ? this.itemService.update(this.id, this.form.value) : this.itemService.create(this.form.value);\n      saveOperation.subscribe(() => {\n        this.router.navigate(['/add/item']); // Go back to item list\n      });\n    }\n    static #_ = this.ɵfac = function ItemEditComponent_Factory(t) {\n      return new (t || ItemEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ItemService), i0.ɵɵdirectiveInject(i4.CategoryService), i0.ɵɵdirectiveInject(i5.BrandService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ItemEditComponent,\n      selectors: [[\"app-item-edit\"]],\n      decls: 30,\n      vars: 5,\n      consts: [[1, \"container\", \"mt-3\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"formControlName\", \"name\", 1, \"form-control\"], [\"formControlName\", \"categoryId\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"brandId\", 1, \"form-control\"], [\"formControlName\", \"description\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"routerLink\", \"/add/item\", 1, \"btn\", \"btn-secondary\"], [3, \"value\"]],\n      template: function ItemEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ItemEditComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.save();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n          i0.ɵɵtext(10, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"select\", 4)(12, \"option\", 5);\n          i0.ɵɵtext(13, \"Select Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, ItemEditComponent_option_14_Template, 2, 2, \"option\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 2)(16, \"label\");\n          i0.ɵɵtext(17, \"Brand\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"select\", 7)(19, \"option\", 5);\n          i0.ɵɵtext(20, \"Select Brand\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(21, ItemEditComponent_option_21_Template, 2, 2, \"option\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\");\n          i0.ɵɵtext(24, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"textarea\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 9);\n          i0.ɵɵtext(27, \"Save\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"a\", 10);\n          i0.ɵɵtext(29, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.brands);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ItemEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}